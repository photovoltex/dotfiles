# complete reference: `man 5 sway`

# 
### Variables
#
# Mod1 for Alt
set $mod Mod4

set $left h
set $down j
set $up k
set $right l

set $term kitty
set $menu wofi 
set $lock swaylock

#
### Output configuration
#
# `man 5 sway-output` `swaymsg -t get_outputs`
    output * bg /usr/share/backgrounds/sway/dark-cat.png fill
    output eDP-1 {
        scale 1
        # adaptive_sync on
    }


# 
### Input configuration
#
# `man 5 sway-input` `swaymsg -t get_inputs`
    # dwt => disable while typing
    input "2362:628:PIXA3854:00_093A:0274_Touchpad" {
        dwt enabled 
        tap enabled
        natural_scroll enabled
        pointer_accel 0.17
        accel_profile "adaptive"
        # middle_emulation enabled
    }


### Idle configuration
#
# Example configuration:
#
    exec swayidle -w \
        timeout 300 $lock \
        timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
        before-sleep $lock
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.


# 
### Key bindings
#
# Basics:
#
    bindsym $mod+Return exec $term
    bindsym $mod+Shift+q kill
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    bindsym $mod+Shift+c reload
    # logout
    bindsym $mod+Shift+e exec ~/.scripts/wofi-power_menu
    # bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split
    bindsym $mod+f fullscreen

    bindsym $mod+Shift+space floating toggle
    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # bindsym $mod+Shift+minus move scratchpad
    # bindsym $mod+minus scratchpad show

    bindsym $mod+tab move scratchpad
    bindsym Mod1+Tab scratchpad show
#
# Resizing containers:
#
    mode "resize" {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        bindsym $left resize shrink width 10px
        bindsym $down resize grow height 10px
        bindsym $up resize shrink height 10px
        bindsym $right resize grow width 10px

        # Ditto, with arrow keys
        bindsym Left resize shrink width 10px
        bindsym Down resize grow height 10px
        bindsym Up resize shrink height 10px
        bindsym Right resize grow width 10px


        # fast version with ctrl
        bindsym Shift+$left resize shrink width 30px
        bindsym Shift+$down resize grow height 30px
        bindsym Shift+$up resize shrink height 30px
        bindsym Shift+$right resize grow width 30px

        # Ditto, with arrow keys
        bindsym Shift+Left resize shrink width 30px
        bindsym Shift+Down resize grow height 30px
        bindsym Shift+Up resize shrink height 30px
        bindsym Shift+Right resize grow width 30px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+r mode "resize"

# 
# Clipboard managment
# 
    exec wl-paste -t text --watch clipman store --no-persis

# 
### Screenshot
# 
    # copy selection to clipboard
    bindsym $mod+Shift+S exec ~/.scripts/grim-screenshot_selection
    # todo: doenst work yet # screenshot current window to clipboard
    bindsym $mod+Shift+Ctrl+S exec ~/.scripts/grim-screenshot_window

# 
### F-Key control
# 
    # light need to be executed with sudo and no pwd -> visudo
    bindsym XF86MonBrightnessUp exec sudo light -A 5    #F7
    bindsym XF86MonBrightnessDown exec sudo light -U 5  #F8

    bindsym XF86AudioPlay exec playerctl play-pause     #F5
    bindsym XF86AudioNext exec playerctl next           #F6
    bindsym XF86AudioPrev exec playerctl previous       #F7

    bindsym XF86AudioMute exec pamixer -t               #F1
    bindsym XF86AudioLowerVolume exec pamixer -d 1      #F2
    bindsym XF86AudioRaiseVolume exec pamixer -i 1      #F3

    bindsym Print exec ~/.scripts/grim-screenshot_all   #F11

    # framework button F12 -> free to modify
    # bindsym XF86AudioMedia exec ...
    # $mod+p sudo free... -> F9

# 
### others
# 
    focus_follows_mouse no
    

# 
### GTK3 Theme (GTK2 -> ~/.gtkrc-2.0)
#
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme       'Catppuccin-yellow'
    gsettings set $gnome-schema icon-theme      'Papirus-Dark'
    gsettings set $gnome-schema cursor-theme    'Catppuccin-Peach-Cursors'
    gsettings set $gnome-schema font-name       'Fira Sans'
}

seat seat0 xcursor_theme Catppuccin-Peach-Cursors

# 
### Custom Settings
# 
for_window [app_id="telegramdesktop"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="nemo"] floating enable
for_window [app_id="tlp-ui"] floating enable
for_window [app_id="blueberry.py"] floating enable
for_window [app_id="nm-connection-editor"] floating enable
for_window [app_id="firefox" title="Picture-in-Picture"] floating enable, resize set width 800 px height 450 px, move position 1436 px 994 px, sticky on
for_window [app_id="thunderbird" title="^$"] floating enable, sticky on # , move position 830 px 565 px

default_border none
default_floating_border none

gaps outer 0
gaps inner 15

exec xdg-settings set default-web-browser firefox.desktop
exec xdg-mime default firefox.desktop x-scheme-handler/https x-scheme-handler/http

exec mako

# bindsym $mod+tab workspace back_and_forth
# bindsym $mod+tab workspace next_on_output 
# bindsym $mod+Shift+tab workspace prev_on_output 

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*
